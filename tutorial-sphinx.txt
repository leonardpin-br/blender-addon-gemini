VIRTUAL ENVIRONMENT
================================================================================
================================================================================



Virtual environment
It is necessary to install, in the operating system, the same
Python version (or as close as possible) as the interpreter embedded in Blender.
Then, it is necessary to install the virtual environment
package (in that same Python version).
================================================================================

pip install virtualenv

# In this starter kit, the virtual environment folder is py310env.
# Below is the creation of the virtual environment.
# https://stackoverflow.com/a/1534343
virtualenv --python="C:/Program Files/Python310/python.exe" "./py310env"

# Activation of the virtual environment:
source ./py310env/Scripts/activate


Installation of all packages if there is a requirements.txt file
--------------------------------------------------------------------------------

pip install -r requirements.txt




SPHINX
================================================================================
================================================================================



Installation of documentation packages
================================================================================


Sphinx's intallation, upgrade and verification.
	pip install
	https://pip.pypa.io/en/latest/cli/pip_install/#cmdoption-U
--------------------------------------------------------------------------------

pip install sphinx

pip install --upgrade sphinx

sphinx-build --version


Sphinx's packages installation
--------------------------------------------------------------------------------

pip install sphinxcontrib-napoleon

pip install sphinx_rtd_theme

pip install todo

pip install autodoc



Project Folder structure:
================================================================================

<project_root_folder>
├── .vscode
├── docs
│   └── sphinx
├── node_modules
├── py310env
├── resources
├── scripts
├── Gemini       <= Files to be documented.
├── .gitattributes
├── .gitignore
├── LICENSE
├── package-lock.json
├── package.json
├── README.md
├── requirements.txt
└── tutorial-sphinx.txt

# Generated with the tree command (and further edited):
tree --dirsfirst -a -I ".git|node_modules|py310env" > tree.txt



Sphinx - 1: Running the assistant
	What Sphinx calls "root path" is the docs folder.
	The command below runs the assistant in the docs foler.
================================================================================

sphinx-quickstart docs/sphinx

# Write "y" (without quotes) and press Enter.
Separate source and build directories (y/n) [n]:


Folder structure (inside docs) created by the Sphinx's assistant
--------------------------------------------------------------------------------

docs
├── sphinx
│       ├── build
│       ├── source
│       │   ├── _static
│       │   ├── _templates
│       │   ├── .gitignore
│       │   ├── conf.py
│       │   └── index.rst
│       ├── make.bat
│       └── Makefile



Sphinx - 2: Editing the configuration files
================================================================================


Editing the file ./docs/sphinx/source/conf.py
    https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#confval-autodoc_mock_imports
--------------------------------------------------------------------------------
# Uncomment or add the lines below:
	import os
	import sys

sys.path.insert(0, os.path.abspath('../../../')) # <= From . to ../../../

extensions = [
    'sphinx.ext.napoleon',
    'sphinx.ext.todo',
    'sphinx.ext.autodoc'
]

autodoc_mock_imports = [    # <= Auto mock in the conf.py file.
    'bgl',
    'blf',
    'bpy',
    'bpy_extras',
    'gpu',
    'gpu_extras',
    'mathutils'
]

master_doc = 'index'    # <= Added

html_theme = 'sphinx_rtd_theme'


Creation of Sphinx sources (use sphinx.ext.autodoc)
	Sphinx sources are the base to the creation of the HTML documentation.

	Flags:
	--force	Force overwriting of any existing generated files.
	-o		Directory to place the output files. If it does not exist, it is created.

	It will create one .rst file for each python script.
--------------------------------------------------------------------------------

sphinx-apidoc --force -o ./docs/sphinx/source ./src


Editing the file ./docs/sphinx/source/index.rst
	The step above created some files, including modules.rst.
	This file acts as a list to the names of the other .rst files that were
    created.

	The name (without extension) of this file (modules.rst) must be placed
	in the index.rst below (and aligned with) the .. toctree::
--------------------------------------------------------------------------------

.. toctree::
   :maxdepth: 2
   :caption: Contents:

   modules		# <= Name inserted (3 spaces indentation).



Sphinx - 3: Creating the HTML files
	Run command in each sub directory using PowerShell
	https://stackoverflow.com/questions/13249034/run-command-in-each-sub-directory-using-powershell#answer-13251065
================================================================================

cd ./docs/sphinx; make html; cd ..; cd ..;


Important to know
--------------------------------------------------------------------------------

The Blender modules can be 'mocked' (for Sphinx) importing the mock module (not a
good idea) or adding the autodoc_mock_imports list to the conf.py file
(preferred).
